/* * ATM Example system - file Log.java * * copyright (c) 2001 - Russell C. Bjork * */ package edu.gordon.simulation;import edu.gordon.atm.physical.ILog;import edu.gordon.banking.Message;import edu.gordon.banking.Money;import edu.gordon.banking.Status;/** Manager for the ATM's internal log.  In a real ATM, this would  *  manage a physical device; in this edu.gordon.simulation,  it uses classes  *  in package edu.gordon.simulation to simulate the device. */ public class SimLog implements ILog {    /** Constructor     * @param simulation      */    public SimLog(Simulation simulation)    {    	this.simulation = simulation;    }        /** Log the sending of a message to the bank     *     *  @param message the message to be logged     */    public void logSend(Message message)    {        simulation.printLogLine("Message:   " + message.toString());     }        /** Log a response received from a message     *     *  @param status the status object returned by the bank in response     */    public void logResponse(Status response)    {        simulation.printLogLine("Response:  " + response.toString());    }        /** Log the dispensing of cash by the cash dispenser     *     *  @param amount the amount of cash being dispensed     */    public void logCashDispensed(Money amount)    {        simulation.printLogLine("Dispensed: " + amount.toString());    }        /** Log accepting an envelope.  This method is only called if an envelope     *  is actually received from the customer     */    public void logEnvelopeAccepted()    {        simulation.printLogLine("Envelope:  received");    }        private Simulation simulation;}